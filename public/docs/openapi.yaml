openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/healthcheck:
    get:
      summary: Healthcheck
      operationId: healthcheck
      description: "Check that the service is up. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and a response listing the failed services."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: up
                  services:
                    database: up
                    redis: up
                properties:
                  status:
                    type: string
                    example: up
                    description: 'The status of this API (`up` or `down`).'
                    enum: []
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: up
                      redis:
                        type: string
                        example: up
                    description: 'Map of each downstream service and their status (`up` or `down`).'
        400:
          description: 'Service is unhealthy'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: down
                  services:
                    database: up
                    redis: down
                properties:
                  status:
                    type: string
                    example: down
                    description: 'The status of this API (`up` or `down`).'
                    enum: []
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: up
                      redis:
                        type: string
                        example: down
                    description: 'Map of each downstream service and their status (`up` or `down`).'
      tags:
        - Endpoints
      security: []
  /api/auth/user:
    get:
      summary: ''
      operationId: getApiAuthUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: 'Get users list'
      operationId: getUsersList
      description: " This endpoint allows you to get users list but not using UserResource.\n It's a really useful endpoint, and you should play around \n with it for a bit.\n <aside class=\"notice\">We mean it; you really should.ðŸ˜•</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Miller Runolfsson'
                      email: brau@example.com
                    -
                      id: 2
                      name: 'Lisa Reilly'
                      email: noemi.kunde@example.net
                    -
                      id: 3
                      name: 'Shad Hirthe'
                      email: stephan.rolfson@example.com
                    -
                      id: 4
                      name: 'Keely Braun'
                      email: gabriella.casper@example.com
                    -
                      id: 5
                      name: 'Xzavier Cronin V'
                      email: kianna.rath@example.com
                    -
                      id: 6
                      name: 'Kristin Wisozk DDS'
                      email: gleichner.richmond@example.net
                    -
                      id: 7
                      name: 'Miss Shania Dare Jr.'
                      email: kwintheiser@example.org
                    -
                      id: 8
                      name: 'Brett Kilback'
                      email: hdoyle@example.org
                    -
                      id: 9
                      name: 'Mr. Raleigh Romaguera DVM'
                      email: dewayne.padberg@example.com
                    -
                      id: 10
                      name: 'Derick Strosin PhD'
                      email: allison52@example.com
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Miller Runolfsson'
                        email: brau@example.com
                      -
                        id: 2
                        name: 'Lisa Reilly'
                        email: noemi.kunde@example.net
                      -
                        id: 3
                        name: 'Shad Hirthe'
                        email: stephan.rolfson@example.com
                      -
                        id: 4
                        name: 'Keely Braun'
                        email: gabriella.casper@example.com
                      -
                        id: 5
                        name: 'Xzavier Cronin V'
                        email: kianna.rath@example.com
                      -
                        id: 6
                        name: 'Kristin Wisozk DDS'
                        email: gleichner.richmond@example.net
                      -
                        id: 7
                        name: 'Miss Shania Dare Jr.'
                        email: kwintheiser@example.org
                      -
                        id: 8
                        name: 'Brett Kilback'
                        email: hdoyle@example.org
                      -
                        id: 9
                        name: 'Mr. Raleigh Romaguera DVM'
                        email: dewayne.padberg@example.com
                      -
                        id: 10
                        name: 'Derick Strosin PhD'
                        email: allison52@example.com
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Miller Runolfsson'
                        email:
                          type: string
                          example: brau@example.com
      tags:
        - Endpoints
      security: []
  '/api/users/{id}':
    get:
      summary: ''
      operationId: getApiUsersId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Testing
                    email: testing@example.com
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Testing
                      email:
                        type: string
                        example: testing@example.com
        404:
          description: 'user not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/resource-users:
    get:
      summary: ''
      operationId: getApiResourceUsers
      description: ''
      parameters:
        -
          in: query
          name: name
          description: 'Filter users by name'
          example: John
          required: false
          schema:
            type: string
            description: 'Filter users by name'
            example: John
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 11
                      name: 'Laury Deckow'
                      email: andre.padberg@example.org
                      posts:
                        -
                          id: 51
                          title: 'Saepe aut cum numquam.'
                          content: "Tempora nam illo eum sunt voluptate. Beatae culpa minus animi dolorum qui. Quaerat dolor voluptatum velit maxime.\n\nAutem ab rerum voluptatum soluta et. Fugiat laborum qui ut ut. Cum qui et reprehenderit nobis itaque accusamus nulla. Illum itaque ipsum recusandae dolorem hic quia ut.\n\nVoluptatem voluptas nisi distinctio aut omnis velit fugiat. Soluta expedita velit et rem. Autem amet doloremque alias eius dolores impedit maxime. Asperiores ea est et eum sint doloribus iusto. Aut ipsa sit voluptas ut deserunt."
                    -
                      id: 12
                      name: 'Mr. Carmine Treutel'
                      email: clint84@example.org
                      posts:
                        -
                          id: 52
                          title: 'Odio dolorem dolor quo.'
                          content: "Sint deserunt vel placeat quis at. Consequatur architecto facilis recusandae. Dolores est quae libero rem.\n\nNon enim est temporibus fugiat. Debitis dolorem fugiat aut eligendi. Impedit rem qui architecto ea reiciendis facilis sequi et. Modi laudantium delectus unde delectus doloribus rerum unde.\n\nDolorem ut aperiam ut quia alias. Ut eum qui saepe praesentium eum magni. Aut quisquam consequatur molestiae hic dolor rem deleniti quia. Odit maxime provident non excepturi illum fuga."
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: 10
                    to: 2
                    total: 2
                  message: Success
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 11
                        name: 'Laury Deckow'
                        email: andre.padberg@example.org
                        posts:
                          -
                            id: 51
                            title: 'Saepe aut cum numquam.'
                            content: "Tempora nam illo eum sunt voluptate. Beatae culpa minus animi dolorum qui. Quaerat dolor voluptatum velit maxime.\n\nAutem ab rerum voluptatum soluta et. Fugiat laborum qui ut ut. Cum qui et reprehenderit nobis itaque accusamus nulla. Illum itaque ipsum recusandae dolorem hic quia ut.\n\nVoluptatem voluptas nisi distinctio aut omnis velit fugiat. Soluta expedita velit et rem. Autem amet doloremque alias eius dolores impedit maxime. Asperiores ea est et eum sint doloribus iusto. Aut ipsa sit voluptas ut deserunt."
                      -
                        id: 12
                        name: 'Mr. Carmine Treutel'
                        email: clint84@example.org
                        posts:
                          -
                            id: 52
                            title: 'Odio dolorem dolor quo.'
                            content: "Sint deserunt vel placeat quis at. Consequatur architecto facilis recusandae. Dolores est quae libero rem.\n\nNon enim est temporibus fugiat. Debitis dolorem fugiat aut eligendi. Impedit rem qui architecto ea reiciendis facilis sequi et. Modi laudantium delectus unde delectus doloribus rerum unde.\n\nDolorem ut aperiam ut quia alias. Ut eum qui saepe praesentium eum magni. Aut quisquam consequatur molestiae hic dolor rem deleniti quia. Odit maxime provident non excepturi illum fuga."
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 11
                        name:
                          type: string
                          example: 'Laury Deckow'
                        email:
                          type: string
                          example: andre.padberg@example.org
                        posts:
                          type: array
                          example:
                            -
                              id: 51
                              title: 'Saepe aut cum numquam.'
                              content: "Tempora nam illo eum sunt voluptate. Beatae culpa minus animi dolorum qui. Quaerat dolor voluptatum velit maxime.\n\nAutem ab rerum voluptatum soluta et. Fugiat laborum qui ut ut. Cum qui et reprehenderit nobis itaque accusamus nulla. Illum itaque ipsum recusandae dolorem hic quia ut.\n\nVoluptatem voluptas nisi distinctio aut omnis velit fugiat. Soluta expedita velit et rem. Autem amet doloremque alias eius dolores impedit maxime. Asperiores ea est et eum sint doloribus iusto. Aut ipsa sit voluptas ut deserunt."
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 51
                              title:
                                type: string
                                example: 'Saepe aut cum numquam.'
                              content:
                                type: string
                                example: "Tempora nam illo eum sunt voluptate. Beatae culpa minus animi dolorum qui. Quaerat dolor voluptatum velit maxime.\n\nAutem ab rerum voluptatum soluta et. Fugiat laborum qui ut ut. Cum qui et reprehenderit nobis itaque accusamus nulla. Illum itaque ipsum recusandae dolorem hic quia ut.\n\nVoluptatem voluptas nisi distinctio aut omnis velit fugiat. Soluta expedita velit et rem. Autem amet doloremque alias eius dolores impedit maxime. Asperiores ea est et eum sint doloribus iusto. Aut ipsa sit voluptas ut deserunt."
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
                  message:
                    type: string
                    example: Success
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corporis
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: rosendo.wolff@example.net
                  nullable: false
      security: []
  '/api/resource-users/{id}':
    get:
      summary: ''
      operationId: getApiResourceUsersId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 11
                    name: 'Ashlynn Pouros Sr.'
                    email: bailey.milton@example.org
                    posts:
                      -
                        id: 51
                        title: 'Numquam quas deserunt a.'
                        content: "Consequatur consectetur aliquam eum qui. Dolores consectetur velit aut rem vitae. Quia ratione est ipsam maiores et excepturi. Cumque quibusdam non reiciendis corrupti magni. Ut commodi quisquam dolor amet.\n\nExcepturi tenetur officiis ut magni. Officia odit et itaque perferendis cupiditate.\n\nAliquid excepturi fuga distinctio alias nihil quaerat consequatur. Repellendus cupiditate et voluptates non. Aliquam expedita ut et illo. Deleniti odit dolor illum fuga."
                  message: Success
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      name:
                        type: string
                        example: 'Ashlynn Pouros Sr.'
                      email:
                        type: string
                        example: bailey.milton@example.org
                      posts:
                        type: array
                        example:
                          -
                            id: 51
                            title: 'Numquam quas deserunt a.'
                            content: "Consequatur consectetur aliquam eum qui. Dolores consectetur velit aut rem vitae. Quia ratione est ipsam maiores et excepturi. Cumque quibusdam non reiciendis corrupti magni. Ut commodi quisquam dolor amet.\n\nExcepturi tenetur officiis ut magni. Officia odit et itaque perferendis cupiditate.\n\nAliquid excepturi fuga distinctio alias nihil quaerat consequatur. Repellendus cupiditate et voluptates non. Aliquam expedita ut et illo. Deleniti odit dolor illum fuga."
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 51
                            title:
                              type: string
                              example: 'Numquam quas deserunt a.'
                            content:
                              type: string
                              example: "Consequatur consectetur aliquam eum qui. Dolores consectetur velit aut rem vitae. Quia ratione est ipsam maiores et excepturi. Cumque quibusdam non reiciendis corrupti magni. Ut commodi quisquam dolor amet.\n\nExcepturi tenetur officiis ut magni. Officia odit et itaque perferendis cupiditate.\n\nAliquid excepturi fuga distinctio alias nihil quaerat consequatur. Repellendus cupiditate et voluptates non. Aliquam expedita ut et illo. Deleniti odit dolor illum fuga."
                    required:
                      - id
                  message:
                    type: string
                    example: Success
      tags:
        - 'User Management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resource user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User Management'
    description: 'A group for managing users'
